#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSPetOnlineStore' -name 'PetApi' {
    Context 'Add-Pet' {
        It 'Test Add-Pet' {
            #$TestResult = Add-Pet -Pet "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeletePet' {
        It 'Test Invoke-DeletePet' {
            #$TestResult = Invoke-DeletePet -PetId "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Find-PetsByStatus' {
        It 'Test Find-PetsByStatus' {
            #$TestResult = Find-PetsByStatus -Status "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Find-PetsByTags' {
        It 'Test Find-PetsByTags' {
            #$TestResult = Find-PetsByTags -Tags "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PetById' {
        It 'Test Get-PetById' {
            #$TestResult = Get-PetById -PetId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Pet' {
        It 'Test Update-Pet' {
            #$TestResult = Update-Pet -Pet "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-PetWithForm' {
        It 'Test Update-PetWithForm' {
            #$TestResult = Update-PetWithForm -PetId "TEST_VALUE" -Name "TEST_VALUE" -Status "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadFile' {
        It 'Test Invoke-UploadFile' {
            #$TestResult = Invoke-UploadFile -PetId "TEST_VALUE" -AdditionalMetadata "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
